<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mauro Gabriel</title>
    
    
    
    <link>https://maurogabriel.com.ar/posts/</link>
    <description>Recent content in Posts on Mauro Gabriel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@ 2020 Mauro Gabriel</copyright>
    <lastBuildDate>Mon, 13 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://maurogabriel.com.ar/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Hugo: Setup and Deploy Site using GitHub Actions</title>
      <link>https://maurogabriel.com.ar/posts/hugo-setup-deploy-github-actions/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maurogabriel.com.ar/posts/hugo-setup-deploy-github-actions/</guid>
      <description>
        
          
          
          
        
        
        
          Si estas usando HUGO para generar tu blog, proyecto o sitio web seguro estás familiarizado con la línea de comando para construir y testear tu sitio en de forma local para luego subirlo con a tu repositorio de preferencia.
Para muchos es un desafio mantener un proyecto de esta manera, en especial al no contar con una interfaz gráfica al estilo Wordpress y menos si tenes que hacer cambios continuos a un artículo o subir varios artículos al día.
          
        
        </description>
    </item>
    
    <item>
      <title>Introduction to Hugo Templating</title>
      <link>https://maurogabriel.com.ar/posts/introduction-to-hugo-templating/</link>
      <pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maurogabriel.com.ar/posts/introduction-to-hugo-templating/</guid>
      <description>
        
          
          
          
        
        
        
          Hugo uses Go’s ’html/template’ and ‘text/template’ libraries as the basis for the templating.
 The following is only a primer on Go Templates. For an in-depth look into Go Templates, check the official Go docs.
 Go Templates provide an extremely simple template language that adheres to the belief that only the most basic of logic belongs in the template or view layer.
          
        
        </description>
    </item>
    
    <item>
      <title>Your branch is ahead of Origin/Master by X Commits</title>
      <link>https://maurogabriel.com.ar/posts/git-issues/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maurogabriel.com.ar/posts/git-issues/</guid>
      <description>
        
          
          
          
        
        
        
          Imagina el siguiente escenario. Al momento de aplicar los cambios en el servidor de producción verificas el estado actual del repositorio local antes de traer los cambios hechos en tu repositorio en remoto y te das cuenta de que tu rama local se encuentra por delante de la rama ‘origin/master’ tal como se muestra a continuación.
git status # On branch master # Your branch is ahead of &#39;origin/master&#39; by X commits.
          
        
        </description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://maurogabriel.com.ar/posts/hello/</link>
      <pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://maurogabriel.com.ar/posts/hello/</guid>
      <description>
        
          &lt;img src=&#34;https://maurogabriel.com.ar/img/hello.jpg&#34;/&gt;
          
        
        
        
          &#34;Hello, friend?&#34; That&#39;s lame. Maybe I should give you a name?
          
        
        </description>
    </item>
    
  </channel>
</rss>